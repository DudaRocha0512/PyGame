# Imagens da Raposa
class Raposa(pygame.sprite.Sprite):    # Imagens da Raposa
    def _init_(self):
        pygame.sprite.Sprite._init_(self)
        raposa1 = sprite_sheet.subsurface((332,0), (166,166))
        raposa2 = sprite_sheet.subsurface((0,332), (166,166))
        self.andando = [raposa1, raposa1, raposa2,raposa2]        
        self.index_lista = 0
        self.image = self.andando[self.index_lista]
        self.rect = self.image.get_rect()
        self.mask = pygame.mask.from_surface(self.image)
        self.rect.center = (400, 600)
        self.y_inicial = 600 - 166//2
        self.pulo = False
        
    def pular(self):    # Pulo da Raposa
        self.pulo = True

    def update(self):
        if self.pulo == True:
            if self.rect.y <= 200:
                self.pulo = False
            self.rect.y -= 15   # Altura do Pulo
        else:
            if self.rect.y < self.y_inicial:
                self.rect.y += 20
            else:
                self.rect.y = self.y_inicial

        if self.index_lista > 3:
            self.index_lista = 0
        self.index_lista += 0.2
        self.image = self.andando[int(self.index_lista)]

# Obstáculos da Raposa
class Obstaculos(pygame.sprite.Sprite):   # Imagens dos Obstáculos
    def _init_(self):
        pygame.sprite.Sprite._init_(self)
        arb1 = pygame.image.load(os.path.join(imagens, 'Arbusto 1.png')).convert_alpha()
        arbusto1 = pygame.transform.scale(arb1, (245//2,215//2))

        arb2 = pygame.image.load(os.path.join(imagens, 'Arbusto 2.png')).convert_alpha()
        arbusto2 = pygame.transform.scale(arb2, (177//1.2,237//1.2))

        arb3 = pygame.image.load(os.path.join(imagens, 'Arbusto 3.png')).convert_alpha()
        arbusto3 = pygame.transform.scale(arb3, (214//1.2,148//1.2))

        arb4 = pygame.image.load(os.path.join(imagens, 'Arbusto 4.png')).convert_alpha()
        arbusto4 = pygame.transform.scale(arb4, (233//1.5,211//1.5))        

        p1 = pygame.image.load(os.path.join(imagens, 'Pedras 1.png')).convert_alpha()
        pedra1 = pygame.transform.scale(p1, (7946//50,5036//50))  

        p2 = pygame.image.load(os.path.join(imagens, 'Pedras 2.png')).convert_alpha()
        pedra2 = pygame.transform.scale(p2, (7378//50,5282//50))  

        self.obstaculos = [arbusto1, arbusto2, arbusto3, arbusto4, pedra1, pedra2]  
        ind_obs = [0,1,2,3,4,5]      
        #self.index_lista = sorteio
        for _ in ind_obs:
            sorteio = random.choice(ind_obs)
            self.image = self.obstaculos[sorteio]
            self.rect = self.image.get_rect()
            self.mask = pygame.mask.from_surface(self.image)
            self.rect.center = (1400, 600)      

    def update(self):
        if self.rect.topright[0] < 0:
            self.rect.x = 1400
        
        self.rect.x -= 10
